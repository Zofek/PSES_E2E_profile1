        -:    0:Source:UT_E2E_profile1.c
        -:    0:Graph:UT_E2E_profile1.gcno
        -:    0:Data:UT_E2E_profile1.gcda
        -:    0:Runs:6
        -:    1:/** ==================================================================================================================*\
        -:    2:  @file UT_E2E_profile1.c
        -:    3:
        -:    4:  @brief Testy jednostkowe do E2E_profile1
        -:    5:\**====================================================================================================================*/
        -:    6:#include "..\inc\Std_Types.h"
        -:    7:#include "..\inc\acutest.h"
        -:    8:#include "E2E_profile1.c"
        -:    9:#include "crc.c"
        -:   10:/**
        -:   11:  @brief Test of compute_p01_crc
        -:   12:**/
    #####:   13:void Test_Of_Compute_P01_Crc(void)
        -:   14:{
        -:   15://sprawdzenie wymagań przez review - spełnione 
        -:   16:
        -:   17:    uint8_t retv;
        -:   18:    E2E_P01ConfigType Config;
    #####:   19:    E2E_P01ConfigType* PointerConfig = &Config;
        -:   20:    uint8_t Counter;
        -:   21:    uint8_t Data;
    #####:   22:    uint8_t* PointerData = &Data;
    #####:   23:    retv = compute_p01_crc(PointerConfig,Counter,PointerData);
    #####:   24:    TEST_CHECK(retv == 1);
    #####:   25:}
        -:   26:
        -:   27:/**
        -:   28:  @brief Test of E2E_P01Protect
        -:   29:**/
        2:   30:void Test_Of_E2E_P01Protect(void)
        -:   31:{
        -:   32://sprawdzenie wymagań przez review - spełnione 
        -:   33:
        -:   34:    Std_ReturnType retv;
        -:   35:    E2E_P01ConfigType Config;
        2:   36:    E2E_P01ConfigType* PointerConfig = &Config;
        -:   37:    E2E_P01SenderStateType State;
        2:   38:    E2E_P01SenderStateType* PointerState = &State;
        -:   39:    uint8_t Data;
        2:   40:    uint8_t* PointerData = &Data;
        -:   41:
        2:   42:    retv = E2E_P01Protect(PointerConfig,PointerState,PointerData);
        2:   43:    TEST_CHECK(retv == E_OK);
        2:   44:}
        -:   45:
        -:   46:
        -:   47:/**
        -:   48:  @brief Test of E2E_P01Check
        -:   49:**/
        2:   50:void Test_Of_E2E_P01Check(void)
        -:   51:{
        -:   52://sprawdzenie wymagań przez review - spełnione 
        -:   53:
        -:   54:    Std_ReturnType retv;
        -:   55:    E2E_P01ConfigType Config;
        2:   56:    E2E_P01ConfigType* PointerConfig = &Config;
        -:   57:    E2E_P01ReceiverStateType State;
        2:   58:    E2E_P01ReceiverStateType* PointerState = &State;
        -:   59:    uint8_t Data;
        2:   60:    uint8_t* PointerData = &Data;
        -:   61:
        2:   62:    retv = E2E_P01Check(PointerConfig,PointerState,PointerData);
        2:   63:    TEST_CHECK(retv == E_OK);
        2:   64:}
        -:   65:
        -:   66:
        -:   67:/*
        -:   68:  Lista testów 
        -:   69:*/
        -:   70:TEST_LIST = {
        -:   71:    { "Test of Compute_P01_Crc", Test_Of_Compute_P01_Crc },
        -:   72:    { "Test of Test_Of_E2E_P01Protect", Test_Of_E2E_P01Protect },
        -:   73:    { "Test of Test_Of_E2E_P01Check", Test_Of_E2E_P01Check },
        -:   74:    { NULL, NULL }                                      
        -:   75:};
